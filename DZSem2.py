# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает 
# две подсказки. Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.
# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. В результате вы должны 
# вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

# Вариант 1 

s = 12
p = 27
# for i in range(1, s):
#     if p == i * (s - i):
#         print(i, end=' ')
#     if s/2 == p/4 or s/2 == p/2:
#         print(i)    

# print()
# print()

# Вариант 2

for i in range (1000):
    if (s-i)*i==p and i<=(s-i):
        print(i, s-i)









# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом. 
# Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, чтобы все монетки 
# лежали одной и той же стороной вверх.
# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, если i-я монетка лежит гербом вверх, 
# и равно 1, если i-я монетка лежит решкой вверх. Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, которые нужно перевернуть.

coins = [0, 0, 0, 0, 0, 1]

def count_coin(array):
    a = 0
    b = 0
    i = len(array) - 1
    while i >= 0:
        if array[i] == 0:
            b += 1
            i -= 1
        else:
            a += 1
            i -= 1
    if a == 0 or b == 0:
        return 0
    elif a < b:
        return a
    else:
        return b
print(count_coin(coins))



# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числаN.



#Подсчитать каких больше сторон монеток выпало: орла или решки

import random

num_try = int(input("Введите количество бросков монеток = "))

string =""
for i in range(num_try):
    string += random.choice(["P", "O"])

print(string)

max = 0
count = 1
i = 1
while "P" * i in string:
    i += 1
print(i)
